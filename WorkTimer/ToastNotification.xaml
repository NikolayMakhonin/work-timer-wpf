<!-- This notification should be:
1. with half transparent black background
2. with shape of small rectangle
3. with no default window borders
4. with round corners using <Border CornerRadius="10" />
5. placed in the bottom center of client area of screen
6. with message inside binding to Message property
7. with auto fit size to the message
8. font-size should be 20px
9. font family should be like in this css: Roboto, -apple-system, BlinkMacSystemFont, Segoe UI, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
10. with padding 10 pixels between border and message
11. fully trasparent for mouse events
-->
<Window
	x:Class="WorkTimer.ToastNotification"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    WindowStyle="None"
    AllowsTransparency="True"
    Background="Transparent"
    Topmost="True"
    Width="Auto"
    Height="Auto"
    Loaded="Window_Loaded"
    ShowInTaskbar="False"
    WindowStartupLocation="Manual"
    ResizeMode="NoResize"
    ShowActivated="False"
	SizeToContent="WidthAndHeight"
    DataContext="{Binding RelativeSource={RelativeSource Self}}"
    MouseDown="Window_MouseDown"
>
    <Window.Resources>
        <Storyboard
            x:Key="backgroundAnimation" 
            Duration="0:0:1"
            RepeatBehavior="Forever"
        >
            <!-- infinite animation of background color between two colors: 7f000000 and 7f7f0000 with 1 second interval -->
            <ColorAnimationUsingKeyFrames
                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
            >
                <EasingColorKeyFrame
                    KeyTime="0:0:0"
                    Value="#7F000000"
                />
                <EasingColorKeyFrame
                    KeyTime="0:0:0.5"
                    Value="#7F7F0000"
                />
                <EasingColorKeyFrame
                    KeyTime="0:0:1"
                    Value="#7F000000"
                />
            </ColorAnimationUsingKeyFrames>            
        </Storyboard>
    </Window.Resources>
    
    <Border
        CornerRadius="20"
        Background="#7F000000"
        BorderThickness="0"
        Padding="10"
    >
		<!-- enable/disable animation depending on the value of Animation boolean property like this: -->
		<Border.Style>
			<Style TargetType="{x:Type Border}">
				<Style.Triggers>
					<!-- enable animation if Animation property is true -->
					<!-- disable animation if Animation property is false -->
					<DataTrigger Binding="{Binding Animation}" Value="True">
						<DataTrigger.EnterActions>
							<BeginStoryboard Storyboard="{StaticResource backgroundAnimation}" Name="backgroundAnimation" />
						</DataTrigger.EnterActions>
						<DataTrigger.ExitActions>
							<StopStoryboard BeginStoryboardName="backgroundAnimation" />
						</DataTrigger.ExitActions>
					</DataTrigger>
				</Style.Triggers>
			</Style>
		</Border.Style>
		
		<!-- min width: 300px, max width: 600px -->
        <TextBlock
            Text="{Binding DisplayMessage}"
            FontSize="20"
            FontFamily="Roboto, -apple-system, BlinkMacSystemFont, Segoe UI, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif"
			Foreground="White"
            TextWrapping="Wrap"
            TextTrimming="CharacterEllipsis"
            MinWidth="300"
            MaxWidth="600"
            TextAlignment="Center"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
        />
    </Border>
</Window>
